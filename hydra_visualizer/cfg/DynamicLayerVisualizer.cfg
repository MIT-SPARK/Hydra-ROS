#!/usr/bin/env python
PACKAGE = "hydra_visualizer"

import dynamic_reconfigure.parameter_generator_catkin as dr_gen  # NOQA

gen = dr_gen.ParameterGenerator()
gen.add("z_offset_scale", dr_gen.double_t, 0, "number of steps of offset to apply", 0.0, -5.0, 10.0)
gen.add("visualize", dr_gen.bool_t, 0, "show layer", True)
gen.add("node_scale", dr_gen.double_t, 0, "size of the node markers", 0.1, 0.01, 2.0)
gen.add("node_alpha", dr_gen.double_t, 0, "alpha of the node markers", 1.0, 0.0, 1.0)
gen.add("node_use_sphere", dr_gen.bool_t, 0, "use sphere markers (instead of cubes) for node centroids", False)
gen.add("node_color_mode", dr_gen.str_t, 0, "node color adaptor type", "PrefixColorAdaptor")
gen.add("edge_scale", dr_gen.double_t, 0, "layer edge size", 0.03, 0.001, 1.0)
gen.add("edge_alpha", dr_gen.double_t, 0, "layer edge alpha", 1.0, 0.0, 1.0)
gen.add("label_mode", dr_gen.str_t, 0, "label adaptor to use", "NameLabelAdaptor")
gen.add("label_height", dr_gen.double_t, 0, "height of text label above latest node in layer", 1.0, 0.0, 5.0)
gen.add("label_scale", dr_gen.double_t, 0, "scale of text label above latest node in layer", 0.5, 0.05, 5.0)
gen.add("interlayer_edge_insertion_skip", dr_gen.int_t, 0, "Number of edges to skip when drawing interlayer edges", 0, 0, 1000)
gen.add("visualize_interlayer_edges", dr_gen.bool_t, 0, "show interlayer edges", False)

exit(gen.generate(PACKAGE, PACKAGE, "DynamicLayerVisualizer"))
