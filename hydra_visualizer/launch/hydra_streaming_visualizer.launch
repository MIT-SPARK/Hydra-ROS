<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="visualizer_use_zmq" default="false" doc="use zmq to receive scene graphs"/>
  <arg name="visualizer_zmq_ip" default="127.0.0.1" doc="zmq IP to listen on"/>
  <arg name="visualizer_zmq_port" default="8001" doc="zmq port to listen on"/>
  <arg name="visualizer_zmq_url" default="tcp://$(arg visualizer_zmq_ip):$(arg visualizer_zmq_port)" doc="full zmq url"/>

  <arg name="visualizer_frame" default="map"/>
  <arg name="color_mesh_by_label" default="true"/>
  <arg name="visualizer_config_path" default="$(find hydra_visualizer)/config/visualizer_config.yaml"/>
  <arg name="visualizer_plugins_path" default="$(find hydra_visualizer)/config/visualizer_plugins.yaml"/>
  <arg name="external_plugins_path" default="$(find hydra_visualizer)/config/external_plugins.yaml"/>

  <arg name="verbosity" default="0"/>
  <arg name="visualizer_debug" default="false"/>
  <arg name="visualizer_roslog_destination" default="log"/>
  <arg name="visualizer_launch_prefix" value="$(eval 'gdb -ex run --args' if arg('visualizer_debug') else '')"/>

  <node pkg="hydra_visualizer" type="hydra_visualizer_node" name="hydra_dsg_visualizer"
        launch-prefix="$(arg visualizer_launch_prefix)"
        output="$(eval 'screen' if arg('visualizer_debug') else arg('visualizer_roslog_destination'))"
        required="true"
        args="-alsologtostderr -colorlogtostderr -v=$(arg verbosity)">
    <param name="visualizer_frame" value="$(arg visualizer_frame)"/>
    <param name="graph/type" value="$(eval 'GraphFromZmq' if arg('visualizer_use_zmq') else 'GraphFromRos')"/>
    <param name="graph/url" value="$(arg visualizer_zmq_url)"/>
    <rosparam file="$(arg visualizer_config_path)" ns="config"/>
    <rosparam file="$(arg visualizer_plugins_path)" subst_value="true"/>
    <rosparam file="$(arg external_plugins_path)" subst_value="true"/>
  </node>
</launch>
